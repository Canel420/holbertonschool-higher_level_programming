=========================================
Tests session for 7-base_geometry module
=========================================
This module contains a class with two 
methods:
* area()
* integer_validator()

Importing module
>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry


' Check for area exception '
>>> b = BaseGeometry()
>>> b.area()
Traceback (most recent call last):
...
Exception: area() is not implemented


' Check integer_validator '
>>> b.integer_validator("integer", 1)


' Check negative integer '
>>> b.integer_validator("integer", -1)
Traceback (most recent call last):
...
ValueError: integer must be greater than 0


' Check zero '
>>> b.integer_validator("integer", 0)
Traceback (most recent call last):
...
ValueError: integer must be greater than 0


' Check for a character '
>>> b.integer_validator("integer", 'a')
Traceback (most recent call last):
...
TypeError: integer must be an integer


' Check float type '
>>> b.integer_validator("float", 0.1)
Traceback (most recent call last):
...
TypeError: float must be an integer


' Check bool type '
>>> b.integer_validator("bool", False)
Traceback (most recent call last):
...
TypeError: bool must be an integer


' Check list type '
>>> b.integer_validator("list", [1])
Traceback (most recent call last):
...
TypeError: list must be an integer


' Check set type '
>>> b.integer_validator("set", {1})
Traceback (most recent call last):
...
TypeError: set must be an integer


' Check dict type '
>>> b.integer_validator("dict", {'a': 1})
Traceback (most recent call last):
...
TypeError: dict must be an integer

' Check arguments in integer_validator '
>>> b.integer_validator("integer", 1, 2)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given


' Check integer_validator without arguments '
>>> b.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


