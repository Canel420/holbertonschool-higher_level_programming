==================================
Test session for 1-my_list module
==================================
This module  inherited functions from
list class and adds a function:
* print_sorted()

Importing module
>>> MyList = __import__("1-my_list").MyList

'Checks inheritance'
>>> print(issubclass(MyList, list))
True

'Empty list'
>>> my_list = MyList()
>>> my_list.print_sorted()
[]


' Check __str__ method '
>>> my_list = MyList()
>>> string = my_list.__str__


' Check print return new list ' 
>>> my_list = MyList()
>>> my_list.append(3)
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.print_sorted()
[1, 2, 3]
>>> print(my_list)
[3, 1, 2]


'Positive integers list'
>>> my_list = MyList()
>>> my_list.append(3)
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.print_sorted()
[1, 2, 3]


' Negative integers list '
>>> my_list = MyList()
>>> my_list.append(-3)
>>> my_list.append(-1)
>>> my_list.append(-2)
>>> my_list.print_sorted()
[-3, -2, -1]


' Reversed order list '
>>> my_list = MyList()
>>> my_list.append(3)
>>> my_list.append(2)
>>> my_list.append(1)
>>> my_list.print_sorted()
[1, 2, 3]

' Mixed integers list '
>>> my_list = MyList()
>>> my_list.append(-3)
>>> my_list.append(1)
>>> my_list.append(-2)
>>> my_list.print_sorted()
[-3, -2, 1]


' method with arguments '
>>> my_list = MyList()
>>> my_list.print_sorted(2, 3)
Traceback (most recent call last):
...
TypeError: print_sorted() takes 1 positional argument but 3 were given